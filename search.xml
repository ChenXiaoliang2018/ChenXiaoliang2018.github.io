<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2018%2F12%2F27%2F%E5%9C%A3%E6%9D%AF%E4%B8%8E%E5%8F%8C%E9%A3%9E%E7%BF%BC%E5%B8%83%E5%B1%80%2F</url>
    <content type="text"><![CDATA[特点布局]]></content>
  </entry>
  <entry>
    <title><![CDATA[html5知识总结]]></title>
    <url>%2F2018%2F12%2F26%2Fhtml5%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[新增语义化标签 新添加的标签更加语义化，如header，nav，section(区域)，aside，article，footer等 表单元素新属性 placeholder: 占位符； autofocus: 自动获取焦点； required： 必填项； 更多的输入类型如email，tel，number等； 一等公民video与audio src： 资源路径； controls： 控制条； autoplay： 自动播放； loop： 循环播放； 本地存储h5新增了localStorage对象，用于本地存储； Api setItem(key, value) 用于存储数据； getItem(key) 用于取出数据； removeItem(key) 用于删除某个数据； clear() 用于删除全部数据； 注： localStorage保存数据的格式为字符串，所以存储数据时应当转化为字符串格式，取出数据时应当将字符串格式转为相应格式； sessionStorage与localStorage类似，只不过localStorage生命周期是永久，而sessionStorage在重启浏览器后会清除数据；]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css3.0知识总结]]></title>
    <url>%2F2018%2F12%2F26%2Fcss3.0%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[选择器属性选择器 方括号为标识符，配合$,^等匹配符号 [src$=’.html’] 选中了src属性以.html结尾的元素； 儿子序选择器 选择器关心的是儿子中的第几个，而不关心类型； :first-child 选中了儿子里的第一个元素； p:first-of-type 选中了儿子里的第一个元素，且该元素必须为p元素，可能无法选中； :nth-child(n) 选中了儿子里的第n个元素； 儿子类型序选择器该选择器必须指明类型，所以通常以交集形式出现； p:first-of-type 选中了儿子里的第一个p元素； p:nth-of-type(n) 选中了儿子里的第n个p元素； 伪元素特性 ::after,::before为子级元素； 伪元素默认为行内元素，如需设置宽高，则需要转块或定位； 不要忘记添加content: ‘’; 伪元素可以用来添加小icon，内墙法清浮动，设置蒙板； 圆角 border-radius: 3px/3%; 与border类似非常灵活，可以用像素值，百分数；有单值，四值法；还可以单独设置某个角的圆角； 阴影 box-shadow: 5px 5px 5px rgba(0, 0, 0, .5); 分别是右偏移量，下偏移量，模糊半径，阴影颜色； 添加inset可以设置内阴影； text-shadow：5px 5px 5px rgba(0, 0, 0, .5)； 参数同上，不过没有内阴影； background拓展 background-origin: content-box; 背景图的起源为内容区，而不是padding区域； background-clip： content-box; 背景图在padding区域的图片将会被裁剪掉； background-size: 像素/百分比/contain/cover; 其中contain(容纳)，cover(覆盖)均不改变背景图比例； background-image: -webkit-linear-gradient(top, red, blue); 背景渐变，top：渐变起始位置，red：渐变起始颜色，blue：渐变终止颜色； 变形2D变形 transform: skew(10deg, 10deg) 斜切 transform: scale(2) 放大到2倍 transform: rotate(90deg) 绕中心顺时针旋转90度； transform: translate(100px, 200px) 水平方向平移100px，垂直方向平移200px; 等效于transform: translateX(100px) translateY(200px); 不等效于transform: translateX(100px); transform: translateY(200px); transform-origin: left top; 用于设置旋转中心位置； backface-visibility: hidden; 用于设置图片背面是否可见； 3D变形 transform-style: preserve-3d;要想观察到子元素的3d效果，需要给父元素添加该属性； 在3d变形的过程中，坐标轴也是不断在变化的，x轴水平向右，y轴垂直向下，z轴垂直于该平面； transform: rotateX(90deg) rotateY(90deg);routateZ相当于2D平面里的旋转； perspective: 100px; 景深，用于设置父盒子到屏幕的距离，方便观察； 过渡 用于设置元素从一个状态到另一个状态的变化方式，通常配合hover使用； transition: all 1s linear 0s; all：参与过渡的属性； 1s：过渡持续时间； linear: 过渡方式，还有ease，贝塞尔曲线等； 0s：延迟时间，s不可以省略； 动画 先定义元素在动画过程中的每一帧的状态，然后再使用动画，并设置相关参数。 通常与变形属性配合使用； 与过渡不同的是，动画可以永不停息； 定义动画@-webkit-keyframes 动画名称 {0% {}50% {}100% {}} 调用动画-webkit-animation: donghua 1s linear 0s infinite alternative forwards; donghua: 动画名称； 1s： 持续时间； linear： 运动方式； 0s： 延时时间； infinite： 运动次数； alternative： 是否往返运动； forwards： 是否停留在最后一帧； https://github.com/ChenXiaoliang2018/odds-and-ends/blob/master/%E7%81%AB%E7%AE%AD%E5%8A%A8%E7%94%BB.html https://github.com/ChenXiaoliang2018/odds-and-ends/blob/master/旋转立方体.html]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css2.0技巧总结]]></title>
    <url>%2F2018%2F12%2F25%2Fcss2.0%E6%8A%80%E5%B7%A7%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[logo的写法原理 将公司名称放在h1标签内，有助于SEO； 先利用缩进移出公司名称，再利用溢出隐藏来隐藏文本； 写法 text-indent: -999em; overflow: hidden; 精灵图的使用介绍 将一个项目的小icon制作到一张图上，这样再次访问这些图标时，可以从缓存中寻找，而不用再向服务器请求； 原理 通常利用padding，也可以利用空标签，伪元素给icon留好位置，再引入图片，然后调整背景图位置来让icon正确的显示； 写法 background: url(xx.jpg) -20px 20px; 单行文本截取原理 先将段落设置为不换行，然后设置溢出隐藏，最后将超出部分设置为省略号； 写法 white-space: nowrap; overflow: hidden; text-overflow: ellipsis; 多行文本截取原理 先将容器设置为弹性盒，再设置内容排列方向，设置显示行数，然后设置溢出隐藏，最后设置超出部分为省略号； 写法 display: -webkit- box; -webkit- box-orient: vertical; -webkit- line-clamp: 行数； overflow: hidden; text-overflow: ellipsis; 蒙板的实现原理 利用filter: blur(20px)属性来实现模糊效果，但该模糊效果会模糊当前元素上的所有内容，于是通过给当前元素添加一个一样大小的背景元素（毛玻璃板），在该元素上添加同样的背景图，再利用background-attachment: fixed相对于浏览器窗口位置不变的特性与大背景互相咬合，这样就实现了仿佛透过一层毛玻璃观看大背景的效果，也就是蒙板。 http://www.cnblogs.com/ghost-xyx/p/5677168.html https://github.com/ChenXiaoliang2018/odds-and-ends/blob/master/%E8%92%99%E6%9D%BF.html]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[css2.0知识总结]]></title>
    <url>%2F2018%2F12%2F23%2Fcss2.0%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[常用选择器基础选择器 通配符选择器 标签选择器 类选择器 id选择器 注：权重之间为256进制 高级选择器 后代选择器（空格） 交集选择器（紧密） 并集选择器（逗号） 常用属性 font-style: normal, italic font-weight: normal, bold （默认为400，加粗为700） font-size: 14px （chrom浏览器默认字体为14px） font-family: ‘Arial’, ‘Microsoft YaHei’ （设置字体为Consolas可将大于号开口变大） text-decoration: none, underline （清除默认样式时设置给a标签） text-indent: 2em （em相对父盒子字号倍数，rem相对于根元素html字号倍数） text-align: center （是水平方向而不是垂直方向） background-color: rgba(0,0,0,.5) background-image: images/1.jpg background-repeat: repeat, no-repeat background-attachment: scroll, fixed 注：复合属性最好写在一起 元素分类及特点块级元素 独占一行 可以设置宽高 不设置宽度，自动撑满父盒子宽度 如div，p，ul，li行内元素 并排显示 不可以设置宽高 大小由内容撑开 如a，img，span 浮动适用情况：即想要并排显示又想要设置宽高时。 清浮动的两种有效方法： overflow: hidden 内墙法：div::after{ content:&quot;&quot;; clear:both; display: block; } 注：同级元素要浮动都浮动 定位适用情况：涉及到压盖效果时。 相对定位 不脱标 单独使用，相对自身本来的位置定位。 父子盒模型时，作为绝对定位的参考元素（子绝父相） 绝对定位 脱标 单独使用时，绝对定位属性值与top有关时，相对于页面左上，右上顶点定位，与bottom有关时，相对于首屏左下，右下顶点定位 父子盒模型时，相对于距离自身最近的带有定位的祖先元素。 固定定位 脱标 相对于浏览器窗口顶点定位，适用于返回顶部，弹窗的书写 注： z-index用于确定压盖顺序，默认为0，适用于有定位的元素。 关于marginmargin垂直方向上的塌陷 解决方法：提前计算好 不能用儿子去踹父亲 解决方法：父子盒模型之间的间距最好给父盒子添加padding 关于插入图与背景图的使用 语义上的区别，插入图是占据大小的一个容器，而背景图只是一层背景； 插入图可以设置宽高，图片也可以撑开img元素， 而背景图不可以撑开容器，可以通过background-size来设置背景图的大小； 关于居中 text-align: center; 设置该属性的元素内部的文本或文本级标签，如span会水平居中显示； margin: 0 auto; 在标准文档流里，设置该属性的容器会在父容器内部水平居中并贴顶； position: absolute;left: 50%;margin-left: -盒子宽度一半； 因为脱标，margin: 0 auto失效，适用于绝对定位元素的水平居中与垂直居中； position: absolute;left: 50%;transform: translateX(-50%); 同上，只不过百分率免去了计算，更加简便； opacity:0与display: none区别： opacity: 0只是将将该元素变成透明，该元素仍然存在，仍然可以添加事件等，而display:none则是将该元素从节点树上移除，也就不能再对该元素继续操作了。 https://github.com/ChenXiaoliang2018/boyaa]]></content>
      <categories>
        <category>css</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于DTD]]></title>
    <url>%2F2018%2F12%2F01%2F%E5%85%B3%E4%BA%8EDTD%2F</url>
    <content type="text"><![CDATA[DTD的作用DTD(document type definition): 文档类型声明，在html中规定了浏览器按照何种模式渲染html文件。 渲染模式由于历史原因，各个浏览器对于html文件有不同的渲染模式，甚至同一浏览器的不同版本也有不同，后来W3C组织制定了标准模式，对于老旧的网页通过定义特殊的文档头声明来渲染，而目前及未来的网页大部分将遵循标准模式来渲染。 模式介绍 标准模式（standards mode）： 也叫严格模式（strict mode），即w3c制定的模式。 怪异模式（quirks mode）： 也叫兼容模式（compatibility mode），过渡模式（transitional mode），适用于兼容版本比较早的ie浏览器。 如何判断浏览器渲染模式输入alert(window.top.document.compatMode),提示backcompat为怪异模式，提示css1compat为标准模式。 相关链接： https://www.cnblogs.com/ifonly/p/3312201.html https://hsivonen.fi/doctype/]]></content>
      <categories>
        <category>html</category>
      </categories>
      <tags>
        <tag>知识</tag>
      </tags>
  </entry>
</search>
